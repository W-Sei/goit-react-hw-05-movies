{"version":3,"file":"static/js/593.e74fb40a.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/pages/Home.js","components/services/api.js","components/services/mapper.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  min-height: 100vh;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 50px 80px 50px;\n`;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 10px;\n  border-radius: 2px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: pink;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\nexport const Image = styled.img`\n  width: 300px;\n  height: 440px;\n  margin-bottom: 10px;\n  object-fit: cover;\n`;\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n`;\nexport const Vote = styled.p`\n  font-size: 14px;\n  font-weight: 700;\n  color: black;\n`;\n","import propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, Info, Image, Title, Vote } from './MovieItem.styled';\nimport noPoster from '../images/noMovie.png';\n\nexport function MoviesListItem({ id, title, poster, vote }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location.pathname + location.search }}\n      >\n        <Image\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPoster}\n          alt={title}\n        />\n\n        <Info>\n          <Title>{title ? title : 'No Title'}</Title>\n          <Vote>Vote: {vote}</Vote>\n        </Info>\n      </Link>\n    </Item>\n  );\n}\nMoviesListItem.propTypes = {\n  id: propTypes.number.isRequired,\n  title: propTypes.string.isRequired,\n  poster: propTypes.string.isRequired,\n  vote: propTypes.number.isRequired,\n};\n","import propTypes from 'prop-types';\nimport { List } from './MovieList.styled';\nimport { MoviesListItem } from 'components/MovieItem/MovieItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path, vote_average }) => {\n        return (\n          <MoviesListItem\n            key={id}\n            id={id}\n            title={original_title}\n            poster={poster_path}\n            vote={vote_average}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.number.isRequired,\n      original_title: propTypes.string.isRequired,\n      poster_path: propTypes.string.isRequired,\n      vote_average: propTypes.number.isRequired,\n    })\n  ),\n};","import { MoviesList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'components/services/api';\nimport { mapper } from 'components/services/mapper';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(movies => {\n      const mappedMovies = mapper(movies.results);\n      setMovies(mappedMovies);\n    });\n  }, []);\n  return movies && <MoviesList movies={movies} />;\n}","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = 'c8d20ee8a9e8ed9b29c68c787df9586c';\n\nexport async function fetchMoviesBySearch(query) {\n  const url = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  return await axios.get(`${url}`).then(response => response.data);\n}\n\nexport async function fetchTrendingMovies() {\n  const trendingURL = `${URL}/trending/movie/day?api_key=${KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(response => response.data);\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const detailsURL = `${URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n  return await axios.get(`${detailsURL}`).then(response => response.data);\n}\n\nexport async function fetchMovieCast(movieId) {\n  const castURL = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  return await axios.get(`${castURL}`).then(response => response.data);\n}\n\nexport async function fetchMoviesReviews(movieId) {\n  const reviewsURL = `${URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  return await axios.get(`${reviewsURL}`).then(response => response.data);\n}","export const mapper = data => {\n  return data.map(({ poster_path, id, original_title, vote_average }) => ({\n    poster_path,\n    id,\n    original_title,\n    vote_average,\n  }));\n};"],"names":["List","styled","Item","Info","Image","Title","Vote","MoviesListItem","id","title","poster","vote","location","useLocation","to","state","from","pathname","search","src","noPoster","alt","MoviesList","movies","map","original_title","poster_path","vote_average","HomePage","useState","setMovies","useEffect","fetchTrendingMovies","then","mappedMovies","mapper","results","URL","KEY","fetchMoviesBySearch","query","url","axios","response","data","trendingURL","fetchMovieDetails","movieId","detailsURL","fetchMovieCast","castURL","fetchMoviesReviews","reviewsURL"],"sourceRoot":""}