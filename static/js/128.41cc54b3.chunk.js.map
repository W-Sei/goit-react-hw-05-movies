{"version":3,"file":"static/js/128.41cc54b3.chunk.js","mappings":"6PAEaA,EAAcC,EAAAA,GAAAA,GAAH,+CAGXC,EAAOD,EAAAA,GAAAA,GAAH,sTAeJE,EAASF,EAAAA,GAAAA,EAAH,yGAMNG,EAAgBH,EAAAA,GAAAA,KAAH,wHAObI,EAAeJ,EAAAA,GAAAA,EAAH,uK,SC9BlB,SAASK,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QACxB,OACE,+BACE,SAACP,EAAD,UACGO,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,GAAnB,OACX,SAACT,EAAD,WACE,UAACC,EAAD,WACGM,EADH,MACY,UAACL,EAAD,eAAiBM,EAAjB,WAFHC,EADA,OAUpB,CCXc,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBH,GAASI,MAAK,SAAAC,GAC/B,IAAMC,EAAgB,GACtBD,EAAIE,QAAQd,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQc,EAAkB,EAAlBA,QACnBC,EAAe,CACnBb,GAFyC,EAATA,GAGhCF,OAAQA,EACRC,OAAQa,GAEV,OAAOF,EAAcI,KAAKD,EAC3B,IACDV,EAAWO,EACZ,GACF,GAAE,CAACN,IAEGR,GAAWA,EAAQmB,OAAS,GACjC,SAACpB,EAAD,CAASC,QAASA,KAElB,SAACF,EAAD,0CAEH,C,mMC5BKsB,EAAM,+BACNC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,8EACCC,EADD,UACUJ,EADV,iCACsCC,EADtC,kBACmDE,EADnD,oBAEQE,EAAAA,EAAAA,IAAA,UAAaD,IAAOZ,MAAK,SAAAc,GAAQ,OAAIA,EAASC,IAAb,IAFzC,0GAKA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2FACCC,EADD,UACkBT,EADlB,uCACoDC,EADpD,SACgE,GADhE,SAEQI,EAAAA,EAAAA,IAAA,UAAaI,IAAejB,MAAK,SAAAc,GAAQ,OAAIA,EAASC,IAAb,IAFjD,0GAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCtB,GAAjC,8EACCuB,EADD,UACiBX,EADjB,kBAC8BZ,EAD9B,oBACiDa,EADjD,4BAEQI,EAAAA,EAAAA,IAAA,UAAaM,IAAcnB,MAAK,SAAAc,GAAQ,OAAIA,EAASC,IAAb,IAFhD,0GAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,8EACCyB,EADD,UACcb,EADd,kBAC2BZ,EAD3B,4BACsDa,GADtD,SAEQI,EAAAA,EAAAA,IAAA,UAAaQ,IAAWrB,MAAK,SAAAc,GAAQ,OAAIA,EAASC,IAAb,IAF7C,0GAKA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCH,GAAlC,8EACC0B,EADD,UACiBd,EADjB,kBAC8BZ,EAD9B,4BACyDa,EADzD,mCAEQI,EAAAA,EAAAA,IAAA,UAAaS,IAActB,MAAK,SAAAc,GAAQ,OAAIA,EAASC,IAAb,IAFhD,0G","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/pages/Reviews.js","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  padding: 40px 90px;\n`;\nexport const Item = styled.li`\n  border: transparent;\n  border-radius: 0px;\n  max-width: 1000px;\nmargin: 0 auto;\n  background-color: #fadadd;\n  padding: 40px;\n  margin-bottom: 10px;\n  transition: all 250ms;\n  :hover {\n    transform: scale(1.3);\n    border: 1px solid purple;\n    border-radius: 10px;\n  }\n`;\nexport const Author = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: purple;\n  margin-right: 5px;\n`;\nexport const ReviewContent = styled.span`\n  color: black;\n  font-weight: 500;\n  font-family: 'Roboto', sans-serif;\n  font-size: 13px;\n`;\n\nexport const NoReviewText = styled.p`\n  display: flex;\n  justify-content: center;\n  padding: 40px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  font-size: 25px;\n`;","import PropTypes from 'prop-types';\nimport { ReviewsList, Item, Author, ReviewContent } from './Reviews.styled';\n\nexport function Reviews({ reviews }) {\n  return (\n    <>\n      <ReviewsList>\n        {reviews.map(({ author, review, id }) => (\n          <Item key={id}>\n            <Author>\n              {author}: <ReviewContent>\"{review}\"</ReviewContent>\n            </Author>\n          </Item>\n        ))}\n      </ReviewsList>\n    </>\n  );\n}\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      review: PropTypes.string,\n    })\n  ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'components/services/api';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { NoReviewText } from 'components/Reviews/Reviews.styled';\n\nexport default function ReviewsPage() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(res => {\n      const mappedReviews = [];\n      res.results.map(({ author, content, id }) => {\n        const authorReview = {\n          id: id,\n          author: author,\n          review: content,\n        };\n        return mappedReviews.push(authorReview);\n      });\n      setReviews(mappedReviews);\n    });\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <Reviews reviews={reviews} />\n  ) : (\n    <NoReviewText>We have no reviews here yet.</NoReviewText>\n  );\n}","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = 'c8d20ee8a9e8ed9b29c68c787df9586c';\n\nexport async function fetchMoviesBySearch(query) {\n  const url = `${URL}/search/movie?api_key=${KEY}&query=${query}&page=1`;\n  return await axios.get(`${url}`).then(response => response.data);\n}\n\nexport async function fetchTrendingMovies() {\n  const trendingURL = `${URL}/trending/movie/day?api_key=${KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(response => response.data);\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const detailsURL = `${URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n  return await axios.get(`${detailsURL}`).then(response => response.data);\n}\n\nexport async function fetchMovieCast(movieId) {\n  const castURL = `${URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  return await axios.get(`${castURL}`).then(response => response.data);\n}\n\nexport async function fetchMoviesReviews(movieId) {\n  const reviewsURL = `${URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  return await axios.get(`${reviewsURL}`).then(response => response.data);\n}"],"names":["ReviewsList","styled","Item","Author","ReviewContent","NoReviewText","Reviews","reviews","map","author","review","id","ReviewsPage","useState","setReviews","movieId","useParams","useEffect","fetchMoviesReviews","then","res","mappedReviews","results","content","authorReview","push","length","URL","KEY","fetchMoviesBySearch","query","url","axios","response","data","fetchTrendingMovies","trendingURL","fetchMovieDetails","detailsURL","fetchMovieCast","castURL","reviewsURL"],"sourceRoot":""}